<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
	http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-3.0.xsd ">
	<context:annotation-config />
	<context:component-scan base-package="com.example.spring.mvc" />
	<mvc:annotation-driven enable-matrix-variables="true" />
	<context:property-placeholder location='classpath:${ENV}.properties' />
	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<!-- <value>classpath:log4j.properties</value> -->
				<value>classpath:${ENV}.properties</value>
			</list>
		</property>
	</bean>

	<!-- Mongo Connection -->
	<!-- Factory bean that creates the Mongo instance -->
	<!-- <bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean"> -->
	<!-- <property name="host" value="localhost" /> -->
	<!-- <property name="port" value="27017" /> -->
	<!-- </bean> -->
	<mongo:mongo-client host="${host}" port="${port}">
	</mongo:mongo-client>
	
	<!-- MongoTemplate for connecting and quering the documents in the database -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongo" ref="mongo" />
		<constructor-arg name="databaseName" value="${db}" />
	</bean>

	<!-- Default Servelt -->
	<mvc:default-servlet-handler />
	<mvc:view-controller path="/" view-name="index" />

	<!-- <bean -->
	<!-- class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> -->
	<!-- <property name="mediaTypes"> -->
	<!-- <map> -->
	<!-- <entry key="atom" value="application/atom+xml" /> -->
	<!-- <entry key="html" value="text/html" /> -->
	<!-- <entry key="json" value="application/json" /> -->
	<!-- </map> -->
	<!-- </property> -->
	<!-- <property name="viewResolvers"> -->
	<!-- <list> -->
	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" 
		/> -->
	<!-- <bean -->
	<!-- class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
	<!-- <property name="prefix" value="/WEB-INF/jsp/" /> -->
	<!-- <property name="suffix" value=".jsp" /> -->
	<!-- </bean> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="defaultViews"> -->
	<!-- <list> -->
	<!-- <bean -->
	<!-- class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" 
		/> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- View Resolver Bean -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
		<property name="prefix">
			<value>/pages/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Handler Mapping -->
	<mvc:interceptors>
		<bean class="com.example.spring.mvc.main.HandlerInterceptorController"></bean>
	</mvc:interceptors>

	<mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>
	<!-- File Upload -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- setting maximum upload size -->
		<property name="maxUploadSize" value="10000000" />
	</bean>
</beans>